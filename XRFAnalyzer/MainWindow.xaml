<mah:MetroWindow x:Class="XRFAnalyzer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:XRFAnalyzer.Views.UserControls"
        xmlns:pages="clr-namespace:XRFAnalyzer.Views.Pages"
        xmlns:converters="clr-namespace:XRFAnalyzer.Converters"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="XRFAnalyzer"
        TitleCharacterCasing="Normal"
        x:Name="AppWindow"
        Width="1366" Height="768"
        MinWidth="1024" MinHeight="600"
        WindowStyle="SingleBorderWindow"
        AllowsTransparency="False"
        ResizeMode="CanResize"
        WindowStartupLocation="CenterScreen"
        WindowTitleBrush="{StaticResource LightThemeSecondaryColor}"
        NonActiveWindowTitleBrush="{StaticResource LightThemeSecondaryColor}"
        >
    <Window.Resources>
        <converters:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="x" Command="{Binding ViewM.RemoveSelectedPeakCommand}" />
    </Window.InputBindings>


    <!--Window Layout-->
    <Grid Background="{StaticResource LightThemePrimaryColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="3"/>
            <RowDefinition Height="64"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="64"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="352"/>
        </Grid.ColumnDefinitions>

        <!--Menu Container-->
        <Grid
            Grid.ColumnSpan="3"
            Grid.Row="1"
            Grid.RowSpan="2"
            Panel.ZIndex="3">

            <!--Menu Layout-->
            <DockPanel 
                x:Name="SideNavigationMenuStackPanel"
                Width="64"
                HorizontalAlignment="Left"
                Background="{StaticResource LightThemeSecondaryColor}"
                >

                <!--Menu Toggle Button-->
                <ToggleButton
                    x:Name="MenuToggleButton"
                    Style="{StaticResource MainMenuToggleButton}"
                    DockPanel.Dock="Top"
                    Padding="0"
                    Width="280" Height="64"
                    BorderThickness="0"
                    HorizontalContentAlignment="Left"
                    >
                    <ToggleButton.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard>
                                <Storyboard x:Name="ShowMenu">
                                    <DoubleAnimation 
                                            Storyboard.TargetName="SideNavigationMenuStackPanel"
                                            Storyboard.TargetProperty="Width"
                                            From="64" To="280"
                                            Duration="0:0:0.5"
                                            >
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard>
                                <Storyboard x:Name="HideMenu">
                                    <DoubleAnimation 
                                            Storyboard.TargetName="SideNavigationMenuStackPanel"
                                            Storyboard.TargetProperty="Width"
                                            From="280" To="64"
                                            Duration="0:0:0.5"
                                            >
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ToggleButton.Triggers>
                    <local:MenuButtonContent
                        PackIconStyle="{StaticResource MainMenuButtonIcon}"
                        PackIconKind="Menu" 
                        LabelContent="{Binding LocalizationResourceManager[AppTitle]}"
                        LabelStyle="{StaticResource MainMenuButtonLabel}"/>
                </ToggleButton>

                <!--Top Menu Items-->
                <StackPanel
                    Margin="0"
                    DockPanel.Dock="Top"
                    >

                    <Button 
                        x:Name="MainMenuButton1"
                        Style="{StaticResource MainMenuButton}"
                        ToolTip="{Binding LocalizationResourceManager[LoadAnalyzedSpectrum]}"
                        Command="{Binding CharacteristicSpectrumViewModel.Load}">
                        <local:MenuButtonContent
                            PackIconStyle="{StaticResource MainMenuButtonIcon}"
                            PackIconKind="Applicationimport"
                            LabelContent="{Binding LocalizationResourceManager[LoadAnalyzedSpectrum]}"
                            LabelStyle="{StaticResource MainMenuButtonLabel}"
                            />
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="Click">
                                <behaviors:InvokeCommandAction Command="{Binding SwitchToCharacteristicSpectrumViewModelCommand}" />
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </Button>
                    <Button 
                        Style="{StaticResource MainMenuButton}" 
                        ToolTip="{Binding LocalizationResourceManager[SwitchSpectrum]}"
                        Command="{Binding SwitchSpectrumViewModelCommand}"
                        BorderThickness="0">
                        <local:MenuButtonContent
                            PackIconStyle="{StaticResource MainMenuButtonIcon}"
                            PackIconKind="Swaphorizontalbold"
                            LabelContent="{Binding LocalizationResourceManager[SwitchSpectrum]}"
                            LabelStyle="{StaticResource MainMenuButtonLabel}"/>
                    </Button>

                </StackPanel>

                <!--Bottom Menu Items-->
                <StackPanel
                    DockPanel.Dock="Bottom"
                    Orientation="Vertical"
                    VerticalAlignment="Bottom"
                    >

                    <Button
                        Click="ChangeLanguage_Click"
                        Style="{StaticResource MainMenuButton}" 
                        ToolTip="{Binding LocalizationResourceManager[ChangeLanguage]}"
                        >
                        <local:MenuButtonContent
                            PackIconStyle="{StaticResource MainMenuButtonIcon}"
                            PackIconKind="Language"
                            LabelContent="{Binding LocalizationResourceManager[ChangeLanguage]}"
                            LabelStyle="{StaticResource MainMenuButtonLabel}"/>
                    </Button>

                    <Button 
                        Style="{StaticResource MainMenuButton}" 
                        Command="{Binding ShowAboutCommand}"
                        ToolTip="{Binding LocalizationResourceManager[MainMenuOption7]}">
                        <local:MenuButtonContent
                            PackIconStyle="{StaticResource MainMenuButtonIcon}"
                            PackIconKind="Information"
                            LabelContent="{Binding LocalizationResourceManager[MainMenuOption7]}"
                            LabelStyle="{StaticResource MainMenuButtonLabel}"
                            />
                    </Button>

                </StackPanel>
            </DockPanel>

        </Grid>

        <Grid
            Grid.Row="1"
            Grid.Column="1"
            Background="{StaticResource LightThemePrimaryColor}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <StackPanel 
                Grid.Row="0"
                Orientation="Horizontal">
                <Label
                    Content="{Binding LocalizationResourceManager[CurrentFile]}"
                    VerticalAlignment="Center" 
                    Margin="32 0 0 0"
                   
                    FontFamily="Open Sans"/>
                <Label 
                    Content="{Binding ViewM.CurrentFile}" 
                    VerticalAlignment="Center" 
                    Margin="16 0 0 0"
                    FontFamily="Open Sans"/>
            </StackPanel>
            <StackPanel
                Grid.Row="0"
                Grid.RowSpan="2"
                Orientation="Horizontal"
                HorizontalAlignment="Right"
                >

                <mah:ToggleSwitch
                    x:Name="LogarithmicScaleToggle"
                    Header="{Binding LocalizationResourceManager[LogarithmicScaleToggleLabel]}"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Margin="0 0 0 0"
                    Foreground="{StaticResource LightThemeSecondaryColor}"
                    IsEnabled="{Binding ViewM.IsLoaded}"

                    >
                    <mah:ToggleSwitch.Resources>
                        <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.FillOn" Color="#292c47"></SolidColorBrush>
                    </mah:ToggleSwitch.Resources>
                </mah:ToggleSwitch>
                <mah:ToggleSwitch
                    x:Name="XAxisUnitToggle"
                    Header="{Binding LocalizationResourceManager[XAxisUnitToggleLabel]}"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    OnContent="{Binding LocalizationResourceManager[Energy]}"
                    OffContent="{Binding LocalizationResourceManager[Channel]}"
                    IsOn="False"
                    IsEnabled="{Binding ViewM.IsCalibrated}"

                    >
                    <mah:ToggleSwitch.Resources>
                        <SolidColorBrush x:Key="MahApps.Brushes.ToggleSwitch.FillOn" Color="#292c47"></SolidColorBrush>
                    </mah:ToggleSwitch.Resources>
                </mah:ToggleSwitch>

            </StackPanel>
            <StackPanel 
                Grid.Row="1"
                Orientation="Horizontal">
                <Label
                    Content="{Binding LocalizationResourceManager[SpectrumType]}"
                    VerticalAlignment="Center" 
                    Margin="32 0 0 0"
                   
                    FontFamily="Open Sans"/>
            </StackPanel>
        
        </Grid>

        <!--Plot Container-->
        <Grid
            Grid.Row="2"
            Grid.Column="1" 
            Background="{StaticResource LightThemePrimaryColor}">
            <local:PlotControl 
                x:Name="PlotControl" 
                YLabel="{Binding LocalizationResourceManager[SpectrumWpfPlotYLabel]}"
                XLabel="{Binding LocalizationResourceManager[SpectrumWpfPlotXLabel]}"
                XLabelAlt="{Binding LocalizationResourceManager[SpectrumWpfPlotXLabelAlt]}"
                Counts="{Binding ViewM.Counts}"
                CorrectedCounts="{Binding ViewM.CorrectedCounts}"
                Peaks="{Binding ViewM.Rois}"
                LineEnergies="{Binding ViewM.LineEnergies}"
                LeftPeakBoundary="{Binding ViewM.RoiLeftBoundary, Mode=TwoWay}"
                RightPeakBoundary="{Binding ViewM.RoiRightBoundary,Mode=TwoWay}"
                FoundRois="{Binding ViewM.FoundRois}"
                IsLogarithmicToggled="{Binding IsOn, ElementName=LogarithmicScaleToggle}"
                IsXAxisUnitToggled="{Binding IsOn, ElementName=XAxisUnitToggle}"
                CalibrationCurveSlope="{Binding ViewM.CalibrationCurveSlope}"
                CalibrationCurveIntercept="{Binding ViewM.CalibrationCurveIntercept}"
                SelectedPeakIndex="{Binding ViewM.SelectedPeakIndex, Mode=TwoWay}"
                />

            <!--Peak information panel-->
            <StackPanel
                VerticalAlignment="Top"
                HorizontalAlignment="Right"
                Width="108"
                Margin="32 24 24 0"
                Background="#55F5F5AA"
                Orientation="Vertical"
                Visibility="{Binding ViewM.SelectedPeakIndex, Converter={StaticResource IntToVisibilityConverter}}">
                <Label
                    x:Name="PeakHeightLabel"
                    FontFamily="Futura"
                    Content="{Binding LocalizationResourceManager[PeakHeightLabel]}"/>
                <TextBlock
                    x:Name="PeakHeightValue"
                    HorizontalAlignment="Right"
                    Margin="0 0 0 8"
                    Text="{Binding ViewM.SelectedPeak.Height, StringFormat=N2}"/>
                <Label
                    x:Name="PeakApexChannelLabel"
                    FontFamily="Futura"
                    Content="{Binding LocalizationResourceManager[PeakApexChannelLabel]}"/>
                <TextBlock
                    x:Name="PeakApexChannelValue"
                    HorizontalAlignment="Right"
                    Margin="0 0 0 8"
                    Text="{Binding ViewM.SelectedPeak.ApexChannel}"/>
                <Label
                    x:Name="PeakApexEnergyLabel"
                    Content="{Binding LocalizationResourceManager[PeakApexEnergyLabel]}"/>
                <TextBlock
                    x:Name="PeakApexEnergyValue"
                    HorizontalAlignment="Right"
                    Margin="0 0 0 8"
                    Text="{Binding ViewM.SelectedPeak.ApexEnergy, StringFormat=N2}"/>
                <Label
                    x:Name="PeakChannelRangeLabel"
                    Content="{Binding LocalizationResourceManager[PeakChannelRangeLabel]}"/>
                <TextBlock
                    x:Name="PeakChannelRangeValue"
                    HorizontalAlignment="Right"
                    Margin="0 0 0 8"
                    Text="{Binding ViewM.SelectedPeak.ChannelRange}"/>
                <Label
                    x:Name="PeakEnergyRangeLabel"
                    Content="{Binding LocalizationResourceManager[PeakEnergyRangeLabel]}"/>
                <DockPanel
                    Margin="0 0 0 8">
                    <TextBlock
                        DockPanel.Dock="Right"
                        x:Name="PeakEnergyRangeValue2"
                        HorizontalAlignment="Right"
                        Text="{Binding ViewM.SelectedPeak.EnergyRange}"/>
                </DockPanel>
                <Label
                    x:Name="PeakGrossAreaLabel"
                    Content="{Binding LocalizationResourceManager[PeakGrossAreaLabel]}"/>
                <TextBlock
                    x:Name="PeakGrossAreaValue"
                    HorizontalAlignment="Right"
                    Margin="0 0 0 8"
                    Text="{Binding ViewM.SelectedPeak.GrossArea, StringFormat=N2}"/>
                <Label
                    x:Name="PeakNetAreaLabel"
                    Content="{Binding LocalizationResourceManager[PeakNetAreaLabel]}"/>
                <TextBlock
                    x:Name="PeakNetAreaValue"
                    HorizontalAlignment="Right"
                    Margin="0 0 0 8"
                    Text="{Binding ViewM.SelectedPeak.NetArea, StringFormat=N2}"/>
                <Label
                    x:Name="PeakCentroidLabel"
                    Content="{Binding LocalizationResourceManager[Centroid]}"/>
                <TextBlock
                    x:Name="PeakCentroidValue"
                    HorizontalAlignment="Right"
                    Margin="0 0 0 8"
                    Text="{Binding ViewM.SelectedPeak.Centroid, StringFormat=N2}"/>
                <Label
                    x:Name="PeakFwhmLabel"
                    Content="{Binding LocalizationResourceManager[FWHM]}"/>
                <TextBlock
                    x:Name="PeakFwhmValue"
                    HorizontalAlignment="Right"
                    Margin="0 0 0 8"
                    Text="{Binding ViewM.SelectedPeak.Fwhm, StringFormat=N2}"/>


            </StackPanel>

        </Grid>


        <!--Subview Container-->

        <Frame
            x:Name="NavigationFrame"
            Grid.Row="1" 
            Grid.RowSpan="2"
            Grid.Column="2"
            Source="/Views/Pages/Home.xaml"
            NavigationUIVisibility="Hidden"
            BorderThickness="0"
            BorderBrush="{DynamicResource LightThemePrimaryColor}"
            LoadCompleted="NavigationFrame_InheritDataContext"
            DataContextChanged="NavigationFrame_DataContextChanged"/>

    </Grid>

</mah:MetroWindow>
